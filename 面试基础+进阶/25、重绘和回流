重绘：当渲染树中的元素外观发生变化，不影响布局会产生重绘。
回流：当渲染树中的元素布局发生改变时，产生重绘回流。
js获取Layout值（如：offsetLeft、scrollTop、getComputedStyle等）也会引起回流。因为浏览器需要通过回流计算最新值。
回流必引起重绘，重绘不一定影响回流。
display：none 会触发回流（reflow）
visibility：hidden 会触发重绘

什么会引起回流？
   1.页面的第一次渲染（初始化）

　　2.DOM树的变化（如：增删节点）

　　3.Render树的变化（如：padding 改变）

　　4.浏览器窗口的尺寸变化 resize

　　5.fontsize的变化

　　6.获取元素的某些属性：offsetHeight、


什么会引起重绘？
背景色、颜色的改变等会引起重绘（repaint）


如何尽量避免？
1、用 transform 做形变和位移可以减少回流
2、批量修改元素样式：elem.className
3、需要要对元素进行复杂的操作时，可以先隐藏(display:"none")，操作完成后再显示（因为隐藏元素不在 render 树内，因此修改隐藏元素不会触发回流重绘）
4、避免多次读取某些属性
5、通过绝对位移将复杂的节点元素脱离文档流，形成新的 Render Layer,降低回流成本
6、尽量避免用table布局（table元素一旦触发回流就会导致table里所有的其它元素回流）
7、避免使用css表达式(expression)，因为每次调用都会重新计算值（包括加载页面）



引起重排的属性和场景

增删可见的dom元素
元素的位置改变
元素的尺寸改变
页面渲染初始化
浏览器窗口大小改变
设置style属性
改变文字大小
激活伪类
操作class属性
内容改变
添加删除样式表