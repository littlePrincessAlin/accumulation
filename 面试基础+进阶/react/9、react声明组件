1、声明组件的三种方式：
（1）函数式
只负责根据传入的props来展示；
不涉及setState、不涉及组件实例化、不能访问this对象、不能访问生命周期
整体渲染性能提升。
（2）React.createClass
React.createClass会自绑定函数方法，导致不必要的性能开销，增加代码过时的可能性。
（3）extends React.Component


无状态组件：
React.createClass和React.Component都是创建有状态的组件，这些组件是要被实例化的，并且可以访问组件的生命周期方法。

React.createClass与React.Component区别：
（1）this自绑定
React.createClass创建的组件，其每一个成员函数的this都有React自动绑定，函数中的this会被正确设置。
React.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。
（2）组件初始状态state的配置不同
React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；
React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。
（3）propTypes及defaultProps配置不同
React.createClass在创建组件时，会作为组件实例的属性来配置，其中defaultProps是使用getDefaultProps的方法来获取默认组件属性的
React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的。
