1、componentWillReceiveProps  已废弃
当props发生变化时执行，初始化render的时候不执行，在这个回调函数中，可以根据属性的变化，通过setState来更新组件状态。

这个生命周期，可以在子组件的render函数执行前执行获取新的props，从而更新自组件自己的state。
可以将数据请求放在这里进行执行，需要传的参数则从componentWillReceiveProps(nextProps)中获取。而不必将所有的请求都放在父组件中。那么这个请求只会在这个组件渲染时才会发生，从而减轻了请求的负担。
一般用于父组件状态更新时子组件的重新渲染。

2、shouldComponentUpdate（发生在render之前，更新时）
true：重新渲染组件
false：不用渲染

3、getDerivedStateFromProps（16.3引入）
为了替代componentWillReceiveProps。



生命周期有三个阶段
装载阶段：组件第一次在dom树中被渲染 constructor、getDerivedStateFromProps、render、componentDidMount

（1）constructor
组件的构造函数，第一个被执行，若没有显式定义它，会有一个默认的构造函数，但是若显式定义了构造函数，我们必须在构造函数中执行 super(props)，否则无法在构造函数中拿到this。
如果不初始化 state 或不进行方法绑定，则不需要为 React 组件实现构造函数Constructor。
（2）getDerivedStateFromProps
（3）render
它会根据状态 state 和属性 props 渲染组件。
（4）componentDidMount()
会在组件挂载后（插入 DOM 树中）立即调用：执行依赖于DOM的操作；发送网络请求；添加订阅消息（componentWillUnmount中取消订阅）
更新：组件状态发生变化，重新更新渲染的过程；getDerivedStateFromProps、shouldComponentUpdate、render、getSnapshotBeforeUpdate、componentDidUpdate
（1）shouldComponentUpdate
setState、父组件渲染会导致组件重新渲染。这个生命周期可以去判断是否需要渲染。
（2）getSnapshotBeforeUpdate 被废弃
这个方法在 render 之后，componentDidUpdate 之前调用，有两个参数 prevProps 和 prevState，表示更新之前的 props 和 state，这个函数必须要和 componentDidUpdate 一起使用，并且要有一个返回值，默认是 null，这个返回值作为第三个参数传给 componentDidUpdate。
（3）componentDidUpdate
会在更新后会被立即调用，首次渲染不会执行此方法。


卸载：租件从dom中被移除；componentWillUnmount
（1）componentWillUnmount() 
组件卸载及销毁之前直接调用。在此方法中执行必要的清理操作：
清除 timer，取消网络请求或清除
取消在 componentDidMount() 中创建的订阅等；
