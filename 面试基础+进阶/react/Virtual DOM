1. 对虚拟 DOM 的理解？虚拟 DOM 主要做了什么？虚拟 DOM 本身是什么？
从本质上来说，虚拟dom是一个js对象，通过对象的方式来表示dom结构。
在每次数据发生变化前，虚拟dom都会缓存一份，变化之时，现在的虚拟dom会与缓存的虚拟dom进行比较。
在vue或者react内部封装了diff算法，通过这个算法来进行比较，渲染时修改改变的变化，原先没有发生改变的通过原先的数据进行渲染。

2、为什么要用 Virtual DOM：
（1）在不进行手动优化的情况下，提供过得去的性能
真实DOM∶ 生成HTML字符串＋ 重建所有的DOM元素
Virtual DOM∶ 生成vNode＋ DOMDiff＋必要的dom更新
Virtual DOM的更新DOM的准备工作耗费更多的时间，也就是JS层面，相比于更多的DOM操作它的消费是极其便宜的
（2）跨平台
可以很方便的跨平台操作，比如服务端渲染、uniapp

3、diff算法
它主要用来对比新旧dom树，将更新补丁作用于真实dom，以最小成本完成视图更新。

真实的 DOM 首先会映射为虚拟 DOM；-》当虚拟 DOM 发生变化后，就会根据差距计算生成 patch（内容包含了增加、更新、移除等），=》根据 patch 去更新真实的 DOM，反馈到用户的界面上。

diff算法可以总结为三个策略，分别从树、组件及元素三个层面进行复杂度的优化：


4、虚拟 DOM 的引入与直接操作原生 DOM 相比，哪一个效率更高，为什么
虚拟DOM相对原生的DOM不一定是效率更高，如果只修改一个按钮的文案，那么虚拟 DOM 的操作无论如何都不可能比真实的 DOM 操作更快。在首次渲染大量DOM时，由于多了一层虚拟DOM的计算，虚拟DOM也会比innerHTML插入慢。它能保证性能下限，在真实DOM操作的时候进行针对性的优化时，还是更快的。所以一定要根据具体的场景进行探讨。
虚拟 DOM 的优越之处在于，它能够在提供更爽、更高效的研发模式（也就是函数式的 UI 编程方式）的同时，仍然保持一个还不错的性能。
