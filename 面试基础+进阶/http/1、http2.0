1、写在前面
http2相比与http1大幅提高了网页的性能。
我们在http1中，为了性能考虑使用雪碧图、使用多个域名，都是因为浏览器限制了同一个域名下的请求数量，Chrome一般是6个。
http2引入了多路复用的技术，这个技术可以只通过一个TCP链接，传输所有的请求数据。
https://http2.akamai.com/demo


HTTP/2 很好的解决了当下最常用的 HTTP/1 所存在的一些性能问题，只需要升级到该协议就可以减少很多之前需要做的性能优化工作，当然兼容问题以及如何优雅降级应该是国内还不普遍使用的原因之一。
虽然 HTTP/2 已经解决了很多问题，但是并不代表它已经是完美的了，HTTP/3 就是为了解决 HTTP/2 所存在的一些问题而被推出来的。

2、http2的新技术
（1）二进制传输
之前都是通过文本传输数据，http2引入了新的编码机制，所有传输的数据都会被分割，并采用二进制格式编码。
会把请求报文变成二进制。
（2）多路复用
帧：帧代表着最小的数据单位
流：每个帧会标识出该帧属于哪个流，流也就是多个帧组成的数据流。
多路复用：就是一个TCP链接存在多条流，也就是可以发送多条请求，服务器端可以通过帧中的标识知道是那种请求，这个技术大大提升了传输性能。
（3）header压缩
http1中我们通过文本的形式传输header，当携带cookie时可能每次都需要传输几百到几千字节。
http2采用hpack压缩格式，对传输的header编码，减少了header的大小。并在两端维护了索引表，用于记录出现过的header，后面传输过程中就可以记录已经传输过的键名，对端收到数据后可以通过键名去找对应值。
（4）服务端push
http2.0中服务端可以在客户端某个请求后，主动推送其他资源。
针对一些客户端一定会请求的资源，采用服务端push的方法，就可以提前给客户端推送必要的资源，相对减少一点延迟时间。
当然在浏览器兼容的情况下你也可以使用 prefetch。

3、http3了解
产生的原因：
因为http2使用多路复用，同一域名下只需要使用一个 TCP 连接，当tcp过程丢包时，整个 TCP 都要开始等待重传，会导致后面的所有数据都被阻塞了。
而http1可以开启多个 TCP 连接，出现这种情况反到只会影响其中一个连接，剩余的 TCP 连接还可以正常传输数据。

后来出现的http3，其实是：一个基于 UDP 协议的 QUIC 协议。

QUIC协议：多路复用、0-RTT、使用 TLS1.3 加密、流量控制、有序交付、重传等等功能

这里就简单讲一下http3相关的QUIC协议：
*多路复用
虽然 HTTP2 已经有多路复用来，但是它始终不是tcp协议自己的，QUIC便实现了这个功能。
它传输的单个数据流可以保证有序交付且不会影响其他的数据流。
*0-RTT
缓存当前会话的上下文，在下次恢复会话的时候，只需要将之前的缓存传递给服务端验证通过就可以进行传输了。
